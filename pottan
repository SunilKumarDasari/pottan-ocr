#!/usr/bin/env bash

varamozhiConverter='../varamozhi/lamsrc/lamvi_unicode' 

cache=./cache
glypListFile=$cache/glyphs.txt
glypLabelListFile=$cache/glyphs-labels.txt
glypLabelMaping=$cache/glyph_labels.json


# Generate list of glyphs using permutation/combination
# Also create json file with mapping between unicode_str <-> human-readable-manglish lable ( using varamozhi )
generateGlyphList(){
  # generate all possible combination of glyphs.
  # Glyph can have one or more unicode charectors. eg: 'Nta' is a glyph. 'koo' in old lipi is a glyph
  ./gen-glyph-list.js  > $glypListFile


  # Generate human readable labels for each glyph using varamozhi
  cat $glypListFile | $varamozhiConverter > $glypLabelListFile

  # Create a mapping b/w glyph -> label for future use
  ./split-glyph-list.js $glypListFile $glypLabelListFile $glypLabelMaping
}



# Render the list of glyphs generated using generateGlyphList with various malayalam fonts
# keep the rendered images in a properly named directories 
renderGlyphs(){
  generateGlyphList
  ./render-glyphs.py
}



# try to extract glyphs from each image file present in `data` directory using opencv library
extractGlyphsFromDatafiles(){
  export IFS=$'\n'
  for i in $( ls data ); do
    ./extract-glyphs.py data/$i cache/extracted/
  done
}


if [ -z $1 ]; then
  cat<<EOF
Usage:
./pottan <command> [ arguments ]

List of available commands:

    renderGlyphs                  - render possible glyphs using system fonts. Output is stored in 'cache/generated' directory

    extractGlyphsFromDatafiles    - Extract Glyphs from each image files stored in 'data' directory
EOF
else
  $1
fi
